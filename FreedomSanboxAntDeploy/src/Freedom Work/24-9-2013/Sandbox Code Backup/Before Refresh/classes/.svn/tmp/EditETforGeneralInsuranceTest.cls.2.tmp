/**
*  Test class for Controller class EditETforGeneralInsurance
*
*   Revision History:
*
*   Version        Author             Date            Description
*   1.0            Aditi/Prajakta    02/04/2013      Initial Draft
*/

@isTest
private class EditETforGeneralInsuranceTest 
{
    //test Method
	@isTest(SeeAllData=true)
	public static  void testEditETforGeneralInsurance()
	{
		TestData_Ffreedom testData = new TestData_Ffreedom();
		/*RecordType objRT = [Select Id from RecordType where Name = 'Client' and SobjectType = 'Account'];
		Account objAccount = new Account(LastName='Test',FirstName='Test',Adjustment_Factor__c='2',
	                       PersonTitle='TestData', PersonBirthdate= system.today(),PersonHomePhone='54623676',PersonMobilePhone='5463723456',
	                       Alternate_Mobile__c='356475',PersonEmail='sgdh@test.com', Alternate_E_Mail_Address__c='fdgr@test.com',
	                       Retirement_Year__c=2034, Residential_Status_del__c='own', Retirement_Age__c='58', Estimated_Life_Expectancy__c='67',
	                       Estimated_Life_EndYear__c=2041, Relationship_to_Entity__pc='husband', RecordTypeId = objRT.Id);
        */
		Account objAccount = testData.initializeAccount();
	    insert objAccount;
	    List<Approve_Action_Plan__c> lstApproveActionPlan = new List<Approve_Action_Plan__c>();
	    Approve_Action_Plan__c objAAP1 = testData.init_ApproveActionPlan(objAccount.Id);
	    //Approve_Action_Plan__c objAAP1 = new Approve_Action_Plan__c(Account__c = objAccount.Id);
	    lstApproveActionPlan.add(objAAP1);
	    
	    Approve_Action_Plan__c objAAP2 = testData.init_ApproveActionPlan(objAccount.Id);
	    lstApproveActionPlan.add(objAAP2);
	    
	    insert lstApproveActionPlan;
        
        List<Execution_Tracker__c> lstET = new List<Execution_Tracker__c>();
<<<<<<< .mine
<<<<<<< .mine
        Execution_Tracker__c objET1 = testData.init_ExecutionTracker(objAccount.id,'Assigned to Operations','Opened',objAAP2.Id,'General Insurance','');
=======
        Execution_Tracker__c objET1 = new Execution_Tracker__c(Entity_Name__c = objAccount.id,  ET_Status__c = 'Assigned to Operations', Is_Floating__c = false,
        									Risk_Commencement_Date__c = system.today(),Application_Status__c = 'Opened', Approve_Action_Plan__c = objAAP2.Id, Type__c = 'General Insurance');
=======
        Execution_Tracker__c objET1 = testData.init_ExecutionTracker(objAccount.id,'Assigned to Operations','Opened',objAAP2.Id,'General Insurance','');
>>>>>>> .r13991
>>>>>>> .r13960
        lstET.add(objET1);
<<<<<<< .mine
<<<<<<< .mine
        Execution_Tracker__c objET2 = testData.init_ExecutionTracker(objAccount.id,'Assigned to Operations','Closed',objAAP2.Id,'General Insurance','');
=======
        Execution_Tracker__c objET2 = new Execution_Tracker__c(Entity_Name__c = objAccount.id,  ET_Status__c = 'Assigned to Operations', Is_Floating__c = false,
        									Risk_Commencement_Date__c = system.today(),Application_Status__c = 'Closed', Approve_Action_Plan__c = objAAP2.Id, Type__c = 'General Insurance');
=======
        Execution_Tracker__c objET2 = testData.init_ExecutionTracker(objAccount.id,'Assigned to Operations','Closed',objAAP2.Id,'General Insurance','');
>>>>>>> .r13991
>>>>>>> .r13960
        lstET.add(objET2);
        insert lstET;
        
        Test.startTest();
        ApexPages.currentPage().getParameters().put('eid', objAccount.id);
        ApexPages.currentPage().getParameters().put('etid', objET1.id);
        Apexpages.currentPage().getParameters().put('id', objAAP2.Id);
		Apexpages.currentPage().getParameters().put('type', 'General Insurance');
        EditETforGeneralInsurance objEETC1 = new EditETforGeneralInsurance(); 
      	objEETC1.assignTask();
      	objEETC1.getEntities();
      	objEETC1.updateExecutionTracker();
      	
      	ApexPages.currentPage().getParameters().put('eid', objAccount.id);
        ApexPages.currentPage().getParameters().put('etid', objET1.id);
        Apexpages.currentPage().getParameters().put('id', objAAP2.Id);
		Apexpages.currentPage().getParameters().put('type', 'other');
        EditETforGeneralInsurance objEETC2 = new EditETforGeneralInsurance(); 
      	objEETC2.assignTask();
      	objEETC2.getEntities();
      	objEETC2.updateExecutionTracker();
        Test.stopTest();
	}
}