/*
 * @Author: Anju G
 * @since :24th Jan 2011
 * @Description:FamilyMemberInfoContoller is controller class for FamilyInfoPage
 */
 /*
	This class is keeping all logic to get data for Cash Flow Page.
	It fetches information from Income,Expense,Asset,Insurance and Investment Asset.
	Support is availaible for One year and multi year projection.
	
	Revision History:
	
    Version     Version Author     Date        Comments
    1.0         Persistent         NA  		  	Initial Draft
    
	2.0 		Manasi Ranade	   03/06/2011   If Retirement_Age__c,Estimated_Life_Expectancy__c fields from account are empty then fetch their 
												default values from Global assumption.Change in Constructor.	
	
	2.0 		Manasi Ranade	   11/06/2011   Added query to check whether child spouce entity is earning entity or not.
												If it is earning entity then retirement age field should be required field.
												Hence assigned value to blnIsRetimentAgeRequired variable as per result from querry result in 
												FamilyMemberInfoContoller() constructor.
    2.0 		Manasi Ranade	   27/06/2011   blnIsLifeExpectancyAgeRequired boolean variable will be true if 'Estimated Life Expectancy' is required
								  				else set it to false.If selected entity is parent entity or earning spouse entity then 
								  				'Estimated Life Expectancy' is a required field 
												Change is in FamilyMemberInfoContoller() constructor.												
	2.0 		Manasi Ranade	   23/1/2012    Issue id : 00001447 : Added delete entity functionality											

	2.0 		Mahesh Hirugade	   02/05/2012   Issue id : 00001616 : Added property getFamilyMembers to
*/
public class FamilyMemberInfoContoller 
{
		/** Eternus Solutions       **/
		/** Author  : Manasi Ranade	**/
		/** Issue Id: F0030      	**/
		/** Date    : 03/06/2011 	**/
		/** Purpose : Created DatabaseSOQL object to call methode from that class**/
			/****************************************************/  
		DatabaseSOQL databaseObj = new DatabaseSOQL(); 
		
        public FamilyMemberInfoBean fmBean{get;set;}
        public FamilyMemberInfoservice fmService{get;set;}
        public String entityId{get;set;}
        public String fentityId{get;set;}
        public String entId {get;set;}
        public Boolean isSpouse{get;set;} /* Issue Id : 00001616 */
        //Added on : 31/1/2013 : Aditi Satpute : Hide Save button for Business Partner Financial Plan //Sanat
    	public Boolean isDisplaySaveButton{get;set;}
        
        public FamilyMemberInfoContoller(ApexPages.StandardController stdController) 
        {
    		isSpouse = false;
    		//Code Added on : 31/1/2013 : Aditi Satpute : Hide Save button for Business Partner Financial Plan : by default true //Sanat
   			isDisplaySaveButton = true;
   
            fmBean = new FamilyMemberInfoBean ();
            fmService = new FamilyMemberInfoservice();
            fmService.isCostomerProfile(fmBean);
            entityId = Apexpages.currentPage().getParameters().get('entityId');
        	fentityId = Apexpages.currentPage().getParameters().get('fentityId');
			String accType=Apexpages.currentPage().getParameters().get('RecType');
			
            fmBean.bankRec = fmService.getFinancialRec(Label.bankAccount); 
            fmBean.dematRec = fmService.getFinancialRec(Label.dematAccount);
            
            System.debug('fmBean.bankRec ==============>'+fmBean.bankRec);
            System.debug('fmBean.dematRec ==============>'+fmBean.dematRec);
            
            entId = (fentityId != null && fentityId != '') ? fentityId : entityId; //mahesh - replaced IF by ?: 
			
           	String recType = '';
           	RecTypes__c PersonAccRecordType;
           	String accountName;
           	if(accType.equalsIgnoreCase(Label.client))
           	{
           		accountName = Label.accountClient;
           		if(accountName != null && accountName != '')
           		{
                   	PersonAccRecordType = fmService.getPersonRecordType(accountName);
                   	recType = PersonAccRecordType.Record_Type_Value__c;
                   	fmBean.isFamily = false;
           		}
           }
           else
           {
               accountName = Label.accountfamily;
               if(accountName != null && accountName != '')
               {
               		PersonAccRecordType = fmService.getPersonRecordType(accountName);
               		recType = PersonAccRecordType.Record_Type_Value__c;
               		fmBean.isFamily = true;
               }
           }
           if(entId  !=null && entId !='')
           {
           		//Added Code on : 31/1/2013 : Aditi Satpute : Hide Save button for Business Partner Financial Plan //Sanat
	            User objUser = [Select Profile.Name, ProfileId, UserType, Name, Id From User where Id =: UserInfo.getUserId() limit 1];
	            if(objUser.UserType.equalsIgnoreCase('PowerPartner'))
	            {
	            	isDisplaySaveButton = false;
	            }
	            
                fmBean.acc = fmService.getEntity(entId);
                /** Eternus Solutions       **/
				/** Author  : Manasi Ranade	**/
				/** Issue Id: F0030      	**/
				/** Date    : 03/06/2011 	**/
				/** Purpose : if Retirement_Age__c,Estimated_Life_Expectancy__c fields are null then fetch their default values
							  from Entity_Global_Assumption__c**/
				/****************************************************/
				String parentId = Apexpages.currentPage().getParameters().get('entityId');
				if(parentId != null && parentId != '')
				{
                	Entity_Global_Assumption__c objEntityGlobalAssumption = databaseObj.getEntityGlobalAssumption(parentId);
                	if(fmBean.acc.Retirement_Age__c == null)
                		fmBean.acc.Retirement_Age__c = objEntityGlobalAssumption.Default_Retirement_Age__c;
                	if(fmBean.acc.Estimated_Life_Expectancy__c == null)
                		fmBean.acc.Estimated_Life_Expectancy__c = objEntityGlobalAssumption.Default_Estimated_Life_Expectancy__c;
				}
                fmBean.con = fmService.getContact(fmBean.acc.PersonContactId);
                fmBean.bankList=fmService.getBankDetails(entId, fmBean.bankRec.RecordTypeId__c);
                if(fmBean.bankList.isEmpty())
                {
                    fmService.addNewRow(fmBean,Label.bankAccount);
                    fmService.addNewRow(fmBean,Label.bankAccount);
                    fmService.addNewRow(fmBean,Label.bankAccount);
                    
                }
                fmBean.dematList = fmService.getBankDetails(entId, fmBean.dematRec.RecordTypeId__c);
                 if(fmBean.dematList.isEmpty())
                 {
                    fmService.addNewRow(fmBean,Label.dematAccount);
                    fmService.addNewRow(fmBean,Label.dematAccount);
                 }
				 //F0041
				/** Eternus Solutions       **/
				/** Author  : Manasi Ranade	**/
				/** Issue Id: F0041      	**/
				/** Date    : 11/06/2011 	**/
				/** Purpose : Query to check whether child spouce entity is earning entity or not.If it is earning entity then retirement 
							  age field should be required field**/
				/****************************************************/  
                 Integer iIncomeCount = 0;
               	 iIncomeCount = [SELECT count() FROM Income__c  WHERE entity__c =: entId AND RecordTypeId =: IncomeRecTypes__c.getInstance('Salary Income').RecordTypeId__c  ];
            	/** Eternus Solutions       **/
				/** Author  : Manasi Ranade	**/
				/** Issue Id: F0058      	**/
				/** Date    : 27/06/2011 	**/
				/** Purpose : blnIsLifeExpectancyAgeRequired boolean variable will be true if 'Estimated Life Expectancy' is required
							  else set it to false.If selected entity is parent entity or earning spouse entity then 
							  'Estimated Life Expectancy' is a required field**/
				/****************************************************/  
           		if(accType.equalsIgnoreCase(Label.client))		   
            	{
               		fmBean.blnIsRetimentAgeRequired = true;
               		fmBean.blnIsLifeExpectancyAgeRequired = true;
            	}
            	else
            	{
                  	if(iIncomeCount > 0 && fmBean.con.Relationship_to_Entity__c == 'Wife')
                  	{
                   		fmBean.blnIsRetimentAgeRequired = true;
                   		fmBean.blnIsLifeExpectancyAgeRequired = true;
                  	}
                    else
                   	{
                   		fmBean.blnIsRetimentAgeRequired = false;
                   		fmBean.blnIsLifeExpectancyAgeRequired = false;
                   	}
            	}
           }
           else
           {
               fmBean.acc.RecordTypeId = recType; 
           }
           
			/** Eternus Solutions       	**/
			/** Issue Id : 00001616			**/ 
			/** Author  :Mahesh Hirugade	**/
			/** Date    : 02/05/2012 		**/
			/** Purpose : To show list of family member to select Dependent of an entity
			/****************************************************/
	      	for(Account acc : databaseObj.getFamilyMembers(entityId))
	      	{
	      		if(acc.Relationship_to_Entity__pc == 'Wife' || acc.Relationship_to_Entity__pc == 'Husband'){
	      			isSpouse = true;
	      			break;
	      		}
	      	}
        }
        /**
        This function is used to save the record
        */
        public PageReference save() 
        {
               PageReference pageRef ;
               fmService.save(fmBean,entId);
               if(ApexPages.hasMessages() )
               {
                    pageRef=null;
               }
               else
               {
                    pageRef = new PageReference('/apex/FamilyMemberDetail?entityId='+entityId+
                                                '&tabname=Financial Planning');
               }
               return pageRef;
        }
        
       /**
        This function is used to save the record and navigates to the next family member
        */
        public PageReference saveNext() 
        {
               PageReference pageRef;
               fmService.save(fmBean,entId);
               if(ApexPages.hasMessages())
               {
                    pageRef=null;
               }
               else
               {
                    String parentId=Apexpages.currentPage().getParameters().get('entityId');
                    String childId=Apexpages.currentPage().getParameters().get('fentityId');
                    pageRef=fmService.saveNext(parentId,childId);
                    pageRef.setRedirect(true);
               }
              return pageRef;
        }
        /**
            This function is called when user clicks on cancel button
        */
        public PageReference cancel()
        {
               PageReference pageRef = new PageReference('/apex/FamilyMemberDetail?entityId='+entityId+
                                                         '&tabname=Financial Planning');
                return pageRef;
        }
          /**
        This function is used to add new row
        */
        public Pagereference addNewRow()
        {
                String financialRecType = Apexpages.currentPage().getParameters().get('financialRecordType');
                if(fmBean != null && financialRecType != Null && financialRecType != '')
                	fmService.addNewRow(fmBean,financialRecType);
                return null;
        }
        /**
            This function is called when user clicks on Delete button
        */
        /** Eternus Solutions       **/
		/** Author  :Dipak Nikam	**/
		/** Date    : 29/08/2011 	**/
		/** Purpose : Issue Id : 00001447 : this will delete the entity record, 
					which will further calls to trigger which deletes
					the child records associated with this record. **/
		/****************************************************/  
      public Pagereference DeleteRecords()
      {
      	List<Account> lstAccToDelete = new List<Account>();
      	Pagereference pageRef = null;
      	try
      	{
      		//Manasi
      		Id selectedId;
      		if(Apexpages.currentPage().getParameters().get('fentityId') != null) //Child Id
      			selectedId = Apexpages.currentPage().getParameters().get('fentityId');
      		else if(entityId != null)
      			selectedId = entityId;
      		
      		if(selectedId != null)
      		{
          		//Manasi
          		lstAccToDelete = [Select a.Id, a.Name From Account a where a.Id = :selectedId];
	          	if(lstAccToDelete != null && lstAccToDelete.size() > 0)
	          	{
	          		List<Database.Deleteresult> deleteResult = Database.delete(lstAccToDelete);
	          		if(deleteResult != null && deleteResult.size() > 0)
	          		{
	          			for(Database.Deleteresult objDel:deleteResult)
	          			{
	          				if(objDel.isSuccess())
	          				{
	          					System.debug('Record is deleted====');
	          					pageRef = new PageReference('/001/o');/* neeed to change this url*/
	          					// pageRef = new PageReference('/$Action.Account.List');/* neeed to change this url*/
	          					//pageRef= null;
	          					 return pageRef;
	          				}
	          				else
	          				{
	          					pageRef= null;
	          				}
	          			}
	          		}
	          	}
      		}
         }
         catch(Exception ex)
         {
         	System.debug('==========Exception==='+ex.getMessage());
         }
         return pageRef;
      }
      
		/** Eternus Solutions       	**/
		/** Author  :Mahesh Hirugade	**/
		/** Issue Id : 00001616			**/
		/** Date    : 02/05/2012 		**/
		/** Purpose : Issue Id : 00001616 : To show list of family member to select Dependent of an entity
		/****************************************************/
		public List<SelectOption> getFamilyMembers()
		{
			return fmService.getFamilyMembers(entityId);
		}

  }